import { useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
// import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Banner from "@/components/banner";
import Card from "@/components/card";
// import coffeeStoresData from "../data/coffee-stores.json";
import { fetchCoffeeStoresApi } from "@/lib/coffee-stores";
import useTrackLocation from "@/hooks/use-track-location";

// server side code
export async function getStaticProps(context) {
  // I can alse fetch the api
  // const data = fetch(url); and send it to in the props
  const coffeeStores = await fetchCoffeeStoresApi();

  return {
    props: {
      coffeeStores, // or I can write it in the key value pair
    },
  };
}

// client side code

export default function Home(props) {
  console.log("props", props);
  const { latLong, handleTrackLocation, locationErrorMsg, isLoading } =
    useTrackLocation();
  const [coffeeStoresData, setCoffeeStoresData] = useState("");
  const [coffeeStoresError, setCoffeeStoresError] = useState(null);

  console.log("latlong locationErrorMsg", latLong, locationErrorMsg);

  useEffect(() => {
    async function setCoffeeStoresByLocation() {
      console.log("latLong in use effect", latLong);
      if (latLong) {
        try {
          const fetchedCoffeeStores = await fetchCoffeeStoresApi(latLong, 30);
          setCoffeeStoresData(fetchedCoffeeStores);
          // set the coffee store
          console.log("fetchedCoffeeStores", fetchedCoffeeStores);
        } catch (err) {
          console.log(err);
          setCoffeeStoresError(err.message);
        }
      }
    }
    setCoffeeStoresByLocation();
  }, [latLong]);

  const handleOnBtnClick = () => {
    console.log("handle btn click");
    handleTrackLocation();
  };
  console.log("coffee stores near me", coffeeStoresData);
  return (
    <>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Banner
          buttonText={isLoading ? "Loading..." : "View stores nearby"}
          handleOnClick={handleOnBtnClick}
        />
        {locationErrorMsg && `Something went wrong ${locationErrorMsg}`}
        {coffeeStoresError && `Something went wrong ${coffeeStoresError}`}

        {coffeeStoresData.length > 0 && (
          <>
            <h2 className={styles.heading2}>Coffee Stores Near me</h2>
            <div className={styles.cardLayout}>
              {coffeeStoresData.map((coffeeStore) => (
                <Card
                  key={coffeeStore.id}
                  name={coffeeStore.name}
                  imgUrl={
                    coffeeStore.imgUrl ||
                    "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                  }
                  href={`/coffee-store/${coffeeStore.id}`}
                  className={styles.card}
                />
              ))}
            </div>
          </>
        )}

        {props.coffeeStores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Toronto Store</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((coffeeStore) => (
                <Card
                  key={coffeeStore.id}
                  name={coffeeStore.name}
                  imgUrl={
                    coffeeStore.imgUrl ||
                    "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                  }
                  href={`/coffee-store/${coffeeStore.id}`}
                  className={styles.card}
                />
              ))}
            </div>
          </>
        )}
        {/* <div className={styles.heroImage}>
          <Image
            src="/static/hero-image.png"
            width={700}
            height={400}
            alt="hero-image"
          />
        </div> */}
      </main>
    </>
  );
}
